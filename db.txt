ГАЙД СОЗДАНИЯ АВТОРИЗАЦИИ

1. Открываем vs и качаем framework/
2. Создаем папку ApplicationData в проекте(для размещения в ней модели бд)
3. В папке ApplicationData создай элемент модель ADO.NET.EDM. 
"ЭкзаменЛогинова222Entities"
"ЭкзаменЛогинова222Model"
Имя модели можно не менять (Model1) ВЫБИРАЕМ НУЖНУЮ МОДЕЛЬ
Выбираем таблицы, не забываем убрать системную таблицу при её наличии
4. Не забываем Имя сервера копировать и вставлять
5. в папку ApplicationData добавляем класс AppConnect и пишем:
class AppConnect 
{
   public static ЭкзаменЛогинова222Entities modelOdb;
}

Так же в AppConnect добавляем строчку сверху 
"using НазваниеПрограммы.Modal1"
6. После этого в cs MainWindow также добавляем:
public MainWindow()
{
InitializeComponent();
AppConnect.modelOdb = new ЭкзаменЛогинова222Entities();
}
 
7. УРА! ПРОЕКТ ПОДКЛЮЧЕН К БД!
В MAINWINDOW В XAML НЕ ЗАБЫВАЕМ ПИСАТЬ ЭТО:
<Grid>
  <Frame x:Name="FrmMain" NavigationUIVisibility="Hidden" Grid.RowSpan="2" Grid.ColumnSpan="3"/>
</Grid>
8. Создаем теперь класс AppFrame и в нем пишем:
class AppFrame
{
  public static Frame frameMain;
} 

пропишем далее в главном окне MainWindow.cs

public MainWindow()
{
InitializeComponent();
AppConnect.modelOdb = new ЭкзаменЛогинова222Entities();

AppFrame.frameMain = FrmMain;

FrmMain.Navigate(new PageLogin());
}

ПРИ НАЛИЧИИ ОШИБКИ МЫ НАВОДИМСЯ НА СТРОЧКУ С ОШИБКОЙ И ИСПОЛЬЗУЕМ 
ПРЕДЛАГАЕМОЕ ВОЗМОЖНОЕ РЕШЕНИЕ, ГДЕ ДОБАВЛЯЕТСЯ "using System.Windows.Controls;"


ДОБАВЛЕНИЕ СТРАНИЦ 


1. Создаем папку в проекте PageMain - создаем страницы:
PageLogin
PageKlient
PageZAYAVKI
PageMasterAndOperator

вставляем в PageLogin:
<Grid Background="White">
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Width="400">
            <TextBlock Text="Авторизация" FontSize="24" FontWeight="Bold" TextAlignment="Center" FontFamily="Book Antiqua">
                <TextBlock.Foreground>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0.525"/>
                    </LinearGradientBrush>
                </TextBlock.Foreground>
            </TextBlock>
            <TextBlock Text="Введите логин:" FontFamily="Cambria" FontSize="16" Margin="0,20,0,0">
                <TextBlock.Foreground>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0.525"/>
                    </LinearGradientBrush>
                </TextBlock.Foreground>
            </TextBlock>
            <TextBox BorderBrush="Black" Background="Transparent" x:Name="txbLogin" Width="246" Height="29" BorderThickness="1" SelectionBrush="Black" FontFamily="Cambria" FontSize="14" Margin="0,5,0,0">
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5" />
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <TextBlock Text="Введите пароль:" FontFamily="Cambria" FontSize="16" Margin="0,20,0,0">
                <TextBlock.Foreground>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0.525"/>
                    </LinearGradientBrush>
                </TextBlock.Foreground>
            </TextBlock>
            <PasswordBox x:Name="psbPassword" Width="248" Height="29" Background="Transparent" BorderBrush="Black" SelectionBrush="Black" FontFamily="Cambria" Margin="0,5,0,0">
                <PasswordBox.Template>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border CornerRadius="3" x:Name="Bd" Background="Transparent" BorderBrush="Black" BorderThickness="1">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </PasswordBox.Template>
            </PasswordBox>
            <Button Content="Вход" x:Name="Button1" Width="120" Height="35" FontFamily="Cambria Math" FontSize="16" Margin="0,20,0,0"
                    Click="Button1_Click">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="15"/>
                    </Style>
                </Button.Resources>
                <Button.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFAEEDED" Offset="0.084"/>
                        <GradientStop Color="#FFABE2E2" Offset="1"/>
                        <GradientStop Color="#FF5DB2B3" Offset="0.525"/>
                    </LinearGradientBrush>
                </Button.Background>
            </Button>
            <Button Content="Просмотр заявок" x:Name="Button2" Width="120" Click="Button2_Click" Height="34" FontFamily="Cambria Math" FontSize="14">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="15"/>
                    </Style>
                </Button.Resources>
                <Button.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFAEEDED" Offset="0.084"/>
                        <GradientStop Color="#FFABE2E2" Offset="1"/>
                        <GradientStop Color="#FF5DB2B3" Offset="0.525"/>
                    </LinearGradientBrush>
                </Button.Background>
            </Button>

        </StackPanel>
    </Grid>

CS..............

private void Button1_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                var userObj = AppConnect.modelOdb.Пользователь.FirstOrDefault(x => x.Логин == txbLogin.Text && x.Пароль == psbPassword.Password); if (userObj == null)
                    MessageBox.Show("Такого пользолвателя нет!", "Ошибуа при авторизации!", MessageBoxButton.OK, MessageBoxImage.Error);
                else
                {
                    switch (userObj.КодРоли)
                    {
                        case 1:
                            MessageBox.Show("Здравствуйте, Мастер " + userObj.ФИО + "!",
                                "Уведомление", MessageBoxButton.OK, MessageBoxImage.Information);

                            AppFrame.frameMain.Navigate(new PageMasterAndOperator());
                            break;
                        case 2:
                            MessageBox.Show("Здравствуйте, Оператор " + userObj.ФИО + "!",
                            "Уведомление", MessageBoxButton.OK, MessageBoxImage.Information);

                            AppFrame.frameMain.Navigate(new PageMasterAndOperator());
                            break;
                        case 3:
                            MessageBox.Show("Здравствуйте, Клиент " + userObj.ФИО + "!",
                            "Уведомление", MessageBoxButton.OK, MessageBoxImage.Information);

                            AppFrame.frameMain.Navigate(new PageKlient(userObj));

                            break;
                        default: MessageBox.Show("Данные не обнарyжены!", "Уведомление", MessageBoxButton.OK, MessageBoxImage.Warning); break;
                    }
                }
            }
            catch (Exception Ex)
            {
                MessageBox.Show("Ошибка " + Ex.Message.ToString() + "Критическая работа приложения!",
                   "Уведомление", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        private void Button2_Click(object sender, RoutedEventArgs e)
        {
            AppFrame.frameMain.Navigate(new PageZAYAVKI());
        }


PageKlient - НЕ ЗАБЫВАЕМ xmlns:ApplicationData="clr-namespace:Названиепрограммы.ApplicationData"

<Page.Resources>
        <CollectionViewSource x:Key="klientViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:Пользователь}}"/>
        <CollectionViewSource x:Key="modelViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:Модель}}"/>
        <CollectionViewSource x:Key="telephViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:ТелефонКлиента}}"/>
        <CollectionViewSource x:Key="tipViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:ТипНеисправности}}"/>
        <CollectionViewSource x:Key="vidViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:ВидОборудования}}"/>
    </Page.Resources>

    <Grid Background="White">
        <StackPanel Orientation="Vertical" Margin="10,14,10,284">
            <DataGrid IsReadOnly="True" x:Name="flightDataDataGrid" Margin="10,10,10,308" AutoGenerateColumns="False" Height="87">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Пользователь" Binding="{Binding Пользователь.ФИО}"/>
                    <DataGridTextColumn Header="Модель" Binding="{Binding Модель.Название}"/>
                    <DataGridTextColumn Header="Телефон Клиента" Binding="{Binding ТелефонКлиента.Номер}"/>
                    <DataGridTextColumn Header="Тип Неисправности" Binding="{Binding ТипНеисправности.Название}"/>
                    <DataGridTextColumn Header="Вид Оборудования" Binding="{Binding ВидОборудования.Название}"/>
                    <DataGridTextColumn Header="Описание Проблемы" Binding="{Binding ОписаниеПроблемы}"/>
                    <DataGridTextColumn Header="Дата Создания" Binding="{Binding ДатаСоздания}"/>
                    <DataGridTextColumn Header="Дата Завершения" Binding="{Binding ДатаЗавершения}"/>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
        <StackPanel Orientation="Vertical" Margin="10,147,10,10">
            <Label Content="Подача заявки" FontFamily="Cambria" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,10,0,10"/>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Label Content="Модель" FontFamily="Cambria" FontSize="16" FontWeight="Bold" Grid.Row="0" Grid.Column="0" Margin="0,5"/>
                <TextBox FontFamily="Cambria" FontSize="14" x:Name="txtMODEL" Width="200" Grid.Row="1" Grid.Column="0" Margin="0,5"/>

                <Label Content="Номер телефона" FontFamily="Cambria" FontSize="16" FontWeight="Bold" Grid.Row="0" Grid.Column="1" Margin="0,5"/>
                <TextBox FontFamily="Cambria" FontSize="14" x:Name="txtTEL" Width="200" Grid.Row="1" Grid.Column="1" Margin="0,5"/>

                <Label Content="Тип неисправности" FontFamily="Cambria" FontSize="16" FontWeight="Bold" Grid.Row="2" Grid.Column="0" Margin="0,5"/>
                <TextBox FontFamily="Cambria" FontSize="14" x:Name="txtTIP" Width="200" Grid.Row="3" Grid.Column="0" Margin="0,5"/>

                <Label Content="Вид оборудования" FontFamily="Cambria" FontSize="16" FontWeight="Bold" Grid.Row="2" Grid.Column="1" Margin="0,5"/>
                <TextBox FontFamily="Cambria" FontSize="14" x:Name="txtVID" Width="200" Grid.Row="3" Grid.Column="1" Margin="0,5"/>

                <Label Content="Описание проблемы" FontFamily="Cambria" FontSize="16" FontWeight="Bold" Grid.Row="4" Grid.Column="0" Margin="0,5"/>
                <TextBox FontFamily="Cambria" FontSize="14" x:Name="txtPROBLEMA" Width="200" Grid.Row="5" Grid.Column="0" Margin="0,5"/>

                <Label Content="Дата подачи заявки" FontFamily="Cambria" FontSize="16" FontWeight="Bold" Grid.Row="4" Grid.Column="1" Margin="0,5"/>
                <DatePicker FontFamily="Cambria" FontSize="14" x:Name="txtDATACOZD" Width="200" Grid.Row="5" Grid.Column="1" Margin="0,5"/>

                <Label Content="Дата желаемого получения" FontFamily="Cambria" FontSize="16" FontWeight="Bold" Grid.Column="2" Margin="10,5,-10,5"/>
                <DatePicker FontFamily="Cambria" FontSize="14" x:Name="txtDATAzaver" Width="200" Grid.Row="1" Grid.Column="2" Margin="30,2,30,2"/>
                <Button x:Name="Button1" Content="Подать заявку" FontFamily="Cambria Math" FontSize="16" FontWeight="Bold" BorderBrush="Black" Click="Button1_Click" Grid.Column="2" Margin="68,35,68,4" Grid.RowSpan="2" Grid.Row="2"/>
                <Button  x:Name="btnExit" Content="Вернуться в главное меню" Grid.Column="2" Margin="30,5,21,8" Grid.Row="5" Click="btnExit_Click"/>
            </Grid>
        </StackPanel>
    </Grid>

СS.....................................

 public partial class PageKlient : Page
    {
        Пользователь user;
        public PageKlient(Пользователь user)
        {
            InitializeComponent();
            LoadData();
            this.user = user;
        }

        private void LoadData()
        {

            AppConnect.modelOdb.Заявка.Load();
            flightDataDataGrid.ItemsSource = AppConnect.modelOdb.Заявка.Local;
        }

        private void Button1_Click(object sender, RoutedEventArgs e)
        {
            // Проверка на пустые поля
            if (string.IsNullOrWhiteSpace(txtMODEL.Text) ||
                string.IsNullOrWhiteSpace(txtTEL.Text) ||
                string.IsNullOrWhiteSpace(txtTIP.Text) ||
                string.IsNullOrWhiteSpace(txtVID.Text) ||
                string.IsNullOrWhiteSpace(txtPROBLEMA.Text) ||
                txtDATACOZD.SelectedDate == null ||
                txtDATAzaver.SelectedDate == null)
            {
                MessageBox.Show("Пожалуйста, заполните все поля", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
                return;
            }

            try
            {
                var newModel = new Модель
                {
                    Название = txtMODEL.Text
                };

                var newTel = new ТелефонКлиента
                {
                    Номер = txtTEL.Text
                };

                var newTip = new ТипНеисправности
                {
                    Название = txtTIP.Text
                };

                var newVid = new ВидОборудования
                {
                    Название = txtVID.Text
                };

                var newData = new Заявка
                {
                    Пользователь = user, // Предполагается, что 'user' объявлен где-то в вашем классе
                    Модель = newModel,
                    ТелефонКлиента = newTel,
                    ТипНеисправности = newTip,
                    ВидОборудования = newVid,
                    ОписаниеПроблемы = txtPROBLEMA.Text,
                    ДатаСоздания = txtDATACOZD.SelectedDate.Value.ToString("dd/MM/yyyy"),
                    ДатаЗавершения = txtDATAzaver.SelectedDate.Value.ToString("dd/MM/yyyy")
                };

                AppConnect.modelOdb.Заявка.Add(newData);
                AppConnect.modelOdb.SaveChanges();
                flightDataDataGrid.Items.Refresh();

                MessageBox.Show("Заявка подана! С вами свяжутся в ближайшее время по указанному вами номеру", "Подтверждение заявки", MessageBoxButton.OK, MessageBoxImage.Information);
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Произошла ошибка: {ex.Message}", "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private void btnExit_Click(object sender, RoutedEventArgs e)
        {
            AppFrame.frameMain.Navigate(new PageLogin());

        }
    }

 PAGE ZAYAVKI -        xmlns:ApplicationData="clr-namespace:ekzamenLoginova.ApplicationData"

<Page.Resources>
        <CollectionViewSource x:Key="klientViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:Пользователь}}"/>
        <CollectionViewSource x:Key="modelViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:Модель}}"/>
        <CollectionViewSource x:Key="telephViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:ТелефонКлиента}}"/>
        <CollectionViewSource x:Key="tipViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:ТипНеисправности}}"/>
        <CollectionViewSource x:Key="vidViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:ВидОборудования}}"/>
    </Page.Resources>

    <Grid Background="White">
        <DataGrid IsReadOnly="True" x:Name="flightDataDataGrid" Margin="26,23,31,84" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Пользователь" Binding="{Binding Пользователь.ФИО}"/>
                <DataGridTextColumn Header="Модель" Binding="{Binding Модель.Название}"/>
                <DataGridTextColumn Header="Телефон Клиента" Binding="{Binding ТелефонКлиента.Номер}"/>
                <DataGridTextColumn Header="Тип Неисправности" Binding="{Binding ТипНеисправности.Название}"/>
                <DataGridTextColumn Header="Вид Оборудования" Binding="{Binding ВидОборудования.Название}"/>
                <DataGridTextColumn Header="Описание Проблемы" Binding="{Binding ОписаниеПроблемы}"/>
                <DataGridTextColumn Header="Дата Создания" Binding="{Binding ДатаСоздания}"/>
                <DataGridTextColumn Header="Дата Завершения" Binding="{Binding ДатаЗавершения}"/>
            </DataGrid.Columns>
        </DataGrid>
        <Button x:Name="btnExit" Content="Назад" Margin="26,398,618,26" Click="btnExit_Click"></Button>
    </Grid>

CS................

public partial class PageZAYAVKI : Page
    {
        public PageZAYAVKI()
        {
            InitializeComponent();
            LoadData();
        }

        private void LoadData()
        {

            AppConnect.modelOdb.Заявка.Load();
            flightDataDataGrid.ItemsSource = AppConnect.modelOdb.Заявка.Local;
        }

        private void btnExit_Click(object sender, RoutedEventArgs e)
        {
            AppFrame.frameMain.Navigate(new PageLogin());
        }
    }

PAGE MASTER AND OPERATOR -       xmlns:ApplicationData="clr-namespace:ekzamenLoginova.ApplicationData"

 <Page.Resources>
        <CollectionViewSource x:Key="klientViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:Пользователь}}"/>
        <CollectionViewSource x:Key="modelViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:Модель}}"/>
        <CollectionViewSource x:Key="telephViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:ТелефонКлиента}}"/>
        <CollectionViewSource x:Key="tipViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:ТипНеисправности}}"/>
        <CollectionViewSource x:Key="vidViewSource" d:DesignSource="{d:DesignInstance {x:Type ApplicationData:ВидОборудования}}"/>
    </Page.Resources>

    <Grid Background="White">
        <StackPanel>
            <DataGrid IsReadOnly="True" x:Name="flightDataDataGrid" Margin="0" AutoGenerateColumns="False" Height="185">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Пользователь" Binding="{Binding Пользователь.ФИО}"/>
                    <DataGridTextColumn Header="Модель" Binding="{Binding Модель.Название}"/>
                    <DataGridTextColumn Header="Телефон Клиента" Binding="{Binding ТелефонКлиента.Номер}"/>
                    <DataGridTextColumn Header="Тип Неисправности" Binding="{Binding ТипНеисправности.Название}"/>
                    <DataGridTextColumn Header="Вид Оборудования" Binding="{Binding ВидОборудования.Название}"/>
                    <DataGridTextColumn Header="Описание Проблемы" Binding="{Binding ОписаниеПроблемы}"/>
                    <DataGridTextColumn Header="Дата Создания" Binding="{Binding ДатаСоздания}"/>
                    <DataGridTextColumn Header="Дата Завершения" Binding="{Binding ДатаЗавершения}"/>
                </DataGrid.Columns>
            </DataGrid>
            <TextBox x:Name="searchTextBox" Margin="0" Text="Введите для поиска..." TextChanged="searchTextBox_TextChanged"/>
            <Button x:Name="btmDelete" Content="Удалить выбранную строку" Margin="0" Click="btmDelete_Click" Width="311" />
            <Button x:Name="btnExit" Content="Вернуться в главное меню" Click="btnExit_Click" Width="280"/>
        </StackPanel>
    </Grid>


 CS..........................

 public partial class PageMasterAndOperator : Page
    {
        public PageMasterAndOperator()
        {
            InitializeComponent();
            LoadData();
        }

        private void LoadData()
        {

            AppConnect.modelOdb.Заявка.Load();
            flightDataDataGrid.ItemsSource = AppConnect.modelOdb.Заявка.Local;
        }

        private void btnExit_Click(object sender, RoutedEventArgs e)
        {
            AppFrame.frameMain.Navigate(new PageLogin());

        }

        private void btmDelete_Click(object sender, RoutedEventArgs e)
        {
            if (flightDataDataGrid.SelectedItem != null)
            {
                AppConnect.modelOdb.Заявка.Remove(flightDataDataGrid.SelectedItem as Заявка);
                AppConnect.modelOdb.SaveChanges();
                flightDataDataGrid.Items.Refresh();
            }
        }

        private void searchTextBox_TextChanged(object sender, TextChangedEventArgs e)
        {
            string searchText = searchTextBox.Text.Trim().ToLower();
            var filteredData = AppConnect.modelOdb.Заявка
                .Where(z => z.Пользователь.ФИО.ToLower().Contains(searchText) ||
                            z.Модель.Название.ToLower().Contains(searchText) ||
                            z.ТелефонКлиента.Номер.ToLower().Contains(searchText) ||
                            z.ТипНеисправности.Название.ToLower().Contains(searchText) ||
                            z.ВидОборудования.Название.ToLower().Contains(searchText) ||
                            z.ОписаниеПроблемы.ToLower().Contains(searchText) ||
                            z.ДатаСоздания.ToLower().Contains(searchText) ||
                            z.ДатаЗавершения.ToLower().Contains(searchText))
                .ToList();

            flightDataDataGrid.ItemsSource = filteredData;
        }
    }